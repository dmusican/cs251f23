#+title: C code samples

#+PROPERTY: header-args:C :results output :includes <stdio.h> :xournalpp /tmp/rip.c

#+begin_src C :exports both
int main() {
    int a[3];
    for (int j=0; j < 3; j++) {
        a[j] = j;
    }


    for (int j=0; j < 3; j++) {
        printf("a[%i] = %i\n", j, a[j]);
    }

    // This is bad
    //int x = 3;
    //printf("beyond: %i\n", a[x]);

    // How do I copy?
    int b[3];
    // b = a;   doesn't work
    for (int j=0; j < 3; j++) {
        b[j] = a[j];
    }

    for (int j=0; j < 3; j++) {
        printf("b[%i] = %i\n", j, b[j]);
    }

}
#+end_src

#+RESULTS:
: a[0] = 0
: a[1] = 1
: a[2] = 2
: b[0] = 0
: b[1] = 1
: b[2] = 2


* Example number 2, with pointers

I want to create the array in the heap
#+begin_src C :exports both
#include <stdlib.h>
int main() {

    // array of size 3
    int *c = malloc(3 * sizeof(int));

    for (int j=0; j < 3; j++) {
        c[j] = j;
    }
    for (int j=0; j < 3; j++) {
        printf("c[%i] = %i\n", j, c[j]);
    }

    // Alias this with another variable name
    int *d;
    d = c;


    for (int j=0; j < 3; j++) {
        printf("d[%i] = %i\n", j, c[j]);
    }
}
#+end_src

#+RESULTS:
: c[0] = 0
: c[1] = 1
: c[2] = 2
